(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{154:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return p})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return l}));var n=a(3),r=a(7),i=(a(0),a(173)),o={id:"kerberos_hdp",title:"Kerberos (HDP) integration with LiveData Plane",sidebar_label:"Kerberos (HDP) integration with LiveData Plane"},p={unversionedId:"quickstarts/kerberos_hdp",id:"quickstarts/kerberos_hdp",isDocsHomePage:!1,title:"Kerberos (HDP) integration with LiveData Plane",description:"[//]:",source:"@site/docs/quickstarts/kerberos_hdp.md",slug:"/quickstarts/kerberos_hdp",permalink:"/wandisco-documentation/docs/quickstarts/kerberos_hdp",version:"current",sidebar_label:"Kerberos (HDP) integration with LiveData Plane"},c=[{value:"Introduction",id:"introduction",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Integrating Kerberos with LiveData Plane",id:"integrating-kerberos-with-livedata-plane",children:[{value:"Add the SSHD container to the HDP cluster",id:"add-the-sshd-container-to-the-hdp-cluster",children:[]},{value:"Configure the HDP cluster",id:"configure-the-hdp-cluster",children:[]},{value:"Configure LiveData Plane",id:"configure-livedata-plane",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"Starting the Ambari Agent",id:"starting-the-ambari-agent",children:[]}]}],b={toc:c};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"THIS GUIDE IS WORK IN PROGRESS, PLEASE DO NOT FOLLOW ANYTHING HERE UNTIL THIS WARNING IS REMOVED")),Object(i.b)("h2",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"This guide should be followed when you want to enable your LiveData Plane installation to work with a Kerberized Hortonworks (HDP) cluster."),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"See ",Object(i.b)("a",{parentName:"p",href:"https://wandisco.github.io/wandisco-documentation/docs/quickstarts/installation/installation-quickstarts"},"Quickstart guidance")," for instructions on how to install and configure LiveData Plane with a HDP zone.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"An ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/hosts")," entry for the Docker hostname plus ",Object(i.b)("inlineCode",{parentName:"p"},"fusion-server-hdp")," on all nodes in the HDP cluster."),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example -")," ",Object(i.b)("inlineCode",{parentName:"p"},"172.0.0.4  docker_host01 fusion-server-hdp"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"KDC administrator credentials for the HDP cluster.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"A Kerberos keytab and principal to be used with LiveData Plane. The principal must map to a user that has superuser permissions. This is commonly done by using the HDFS keytab with LiveData Plane."),Object(i.b)("hr",{parentName:"li"}),Object(i.b)("p",{parentName:"li"},"This could also be done by creating a keytab and principal for LiveData Plane with either:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"An ",Object(i.b)("a",{parentName:"p",href:"https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.4/security-reference/content/kerberos_nonambari_creating_mappings_between_principals_and_unix_usernames.html"},"auth_to_local")," rule that maps the LiveData Plane principal to a superuser."),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example rule")," - ",Object(i.b)("inlineCode",{parentName:"p"},"RULE:[1:$1@$0](fusionuser@WANDISCO.HADOOP)s/.*/hdfs/"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"An ",Object(i.b)("a",{parentName:"p",href:"https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.4/security-reference/content/kerberos_nonambari_creating_mappings_between_principals_and_unix_usernames.html"},"auth_to_local")," rule that maps the LiveData Plane principal to a user that is added to the HDFS supergroup on the NameNodes."),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example rule")," - ",Object(i.b)("inlineCode",{parentName:"p"},"RULE:[1:$1@$0](fusionuser@WANDISCO.HADOOP)s/.*/fusionuser/")),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example command on NameNodes")," - ",Object(i.b)("inlineCode",{parentName:"p"},"usermod fusionuser -G hdfs")))),Object(i.b)("hr",{parentName:"li"})),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The keytab to be used with LiveData Plane should be stored in the ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/security/keytabs")," directory on the Ambari Server."))),Object(i.b)("h2",{id:"integrating-kerberos-with-livedata-plane"},"Integrating Kerberos with LiveData Plane"),Object(i.b)("p",null,"This method will allow the Hadoop configuration and Kerberos keytabs to be shared with the LiveData Plane installation, by inducting a specific container into the HDP cluster."),Object(i.b)("h3",{id:"add-the-sshd-container-to-the-hdp-cluster"},"Add the SSHD container to the HDP cluster"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Log in to the Docker host, and switch to the fusion-docker-compose directory."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"cd /path/to/fusion-docker-compose"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Ensure the LiveData Plane containers are running."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"docker-compose ps"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Run a command to obtain the private key of the SSHD container for the HDP zone."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"docker logs fusion_sshd-hdp_1")),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example output")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-text"},"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAuK38KexpwnOYE+hI0a+UXtgNoE1JVPp0n+/DOCTs9AKkpm8e\nbwkVg/sErvRQ63l0gPc7YXiQClc7Ha11rUe1rTez8Hx0MmDcWEwiuFT3Hoonc3Sh\nWNqcua7R8+r+HOS5+CRHAx/25ogdPeygX+U+PyIutGHvHI4I37Z/tRwmakFlfLuF\njgcqjhuqfjY60hM90aoyL2AnGb5pfsEKo2hB8oEquNciuPJo5FHk+3NFpOWLMcwG\n1OQpHjoBLNxZuuZP2C6KTQjodvuLIx/DaA33t2MIJQVKn0sL3wp2PP/ZD59CVqbV\nXmaDoNG0jm0b+PYH97MBS2p2BCVGqskx7TvR6QIDAQABAoIBAB+HrNang0Lso1k6\nvjv2gxlSP7lPmKaGgCTSNX0/aKkcTmoP7J1+asr2r00Db1FUkhx2mSQNBmKNlA00\nETQ9Wvow2WrEhL4ZJWV50i+waeRv595hWi6mXD2jaDsBstLSBiIkZ29UJL4lHQD2\nhkb5B5CV0G2BjuZMJZ20NceA/9oB+AALfo+X6wR610AkWXCDJOClJHbU6fa8fPAO\npp+ucbsZ1EIuCpupV3lWZpDJw4Jw2aqDrIq7UX+hqfE38pePSBL6jLHiQACEyehU\nlqbmSInZFuMSAjuVK/Ewp8nxsEAJ4gH4RJx6DcE0XnaGEO03b6aFDqktbv0jhKWS\nigJHGAECgYEA38KQxlbcxWPW1CclHlJG4tou8hDjPWZ4haEVujxsvrKpbVethxsM\n4Q7VK4ePbIwnEAHjHZw48hsXCumk1ECo91N48L/YuxHWwuRMm9KozbxjyQUl2tjg\nu8nCSXWWDj89VW+Z+Q8ye3DHr7m8JaarSafy5Pov+XSvmXUfIxLBQwECgYEA00nu\nYGxZiTy2jhwL7V7QvUMqsFgc8AXnYcKLG1wXGJhUCVbzjFcKIofEnUiYIfDPl7uJ\nS7tQiaeRkl9z7YuV1GH2vtu2WJL/zItG8uFy0CbvNsrsVXMxYFeegAwKijsonGR/\nK4ZCdrao8sIli+EHkmgUAYrzmgoDoFr4M5RT1ukCgYBNiMjLwUuMplTJfKry/8WK\nU9oSjOGA5CH9A91YhBmWVqg4uDnr5+alkZMyGy4KieH7PPwqxXhCBDsOz/kKh0FF\nOkpc+c0qvTqym5MkJ3HQoGooPwZn9+CfkYDeHX2agDVLhnj2TFrMxT6cWHqmfUM7\nKZQT3dGD2fgC77+TUqtfAQKBgA3offKG71XjUzkDi51yclcjBrpY8n6yRMrgnXuN\nkk+iJ1X+DUYdrKMdQMoBr1H8og2g4KbFi8Wj7CcwdVcbqx8x26YwnE40TvZN7Lus\nL3yYM4Lt1KTDUmq/GcXgBQmYX1H8I4rf6Zwa5gAk24fbpj3y7+4yEVsAccCrie8L\nQoGRAoGAHk/qaX1BTLOtjp6pc7TfYAUpPkhBHjT22eQOjdlUxfV6nbun/pN1/ZXP\nv1a+mgvGqUw24CP+2ZBcLICSk4dlSECy6tUyvLle7iEYMrMRZDyxVrxtFwG3NZKH\nLYoIZTJyKjilWf2otcq/CXief6NA5yfQyK7b3MCYTA6kyV/KlyZ=\n-----END RSA PRIVATE KEY-----\n")),Object(i.b)("p",{parentName:"li"},"Save this private key as a file (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"hdp-key.pem"),") or copy to clipboard to be used later.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Log in to the Ambari Server via a terminal session and confirm that the container is accessible via ssh."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"ssh -i hdp-key.pem -p 2022 root@<docker-hostname>")),Object(i.b)("p",{parentName:"li"},"Either copy the ",Object(i.b)("inlineCode",{parentName:"p"},"hdp-key.pem")," file over to the Ambari Server or create the file and paste in the contents of your clipboard. You can exit the container once SSH access is confirmed."),Object(i.b)("p",{parentName:"li"},"You may need to set permissions of the key to read only before using it."),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"chown 400 hdp-key.pem"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Log in to the Ambari UI and select to Add New Hosts."),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Ambari UI -> Hosts -> Actions -> Add New Hosts"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"In the Add Host Wizard, provide the following information:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Target Hosts - Enter the docker hostname in this field."),Object(i.b)("li",{parentName:"ul"},"Host Registration Information - Provide the contents of the private key file from the docker SSHD container (i.e. ",Object(i.b)("inlineCode",{parentName:"li"},"hdp-key.pem"),")."),Object(i.b)("li",{parentName:"ul"},"SSH Port Number - change the port number to ",Object(i.b)("inlineCode",{parentName:"li"},"2022"),".")),Object(i.b)("p",{parentName:"li"},"Click ",Object(i.b)("strong",{parentName:"p"},"REGISTER AND CONFIRM")," when done.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Wait for the host checks are completed in the ",Object(i.b)("strong",{parentName:"p"},"Confirm Hosts")," step."),Object(i.b)("p",{parentName:"li"},"There is a possibility that the Java version required will not be installed on the SSHD container. If so, then you will need to transfer the JDK to the SSHD container."),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# scp -i hdp-key.pem -P 2022 /usr/java/jdk1.8.0_XYZ.tar.gz <SSHD_CONTAINER>:~")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# ssh -i hdp-key.pem -p 2022 <SSHD_CONTAINER>")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<SSHD_CONTAINER> ~]# mkdir -p /usr/java")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<SSHD_CONTAINER>> ~]# tar -xf jdk1.8.0_XYZ.tar.gz -C /usr/java/")),Object(i.b)("hr",{parentName:"li"}),Object(i.b)("p",{parentName:"li"},"Check that the JCE policy is set to unlimited strength (see the ",Object(i.b)("a",{parentName:"p",href:"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8170157"},"Oracle bug report")," for further information), the output from the command below should read ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if this is the case."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"/usr/java/jdk1.8.0_XYZ/bin/jrunscript -e 'print (javax.crypto.Cipher.getMaxAllowedKeyLength(\"RC5\") >= 256);'")),Object(i.b)("p",{parentName:"li"},"If the command returns ",Object(i.b)("inlineCode",{parentName:"p"},"false"),", you may want to enable unlimited strength policies."),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Java 8 Update 161 or higher")," - Edit the ",Object(i.b)("inlineCode",{parentName:"p"},"java.security")," file in ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/java/jdk1.8.0_XYZ/jre/lib/security")," (for JDK) or ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/java/jdk1.8.0_XYZ/lib/security")," (for JRE). Uncomment or include the line:"),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"crypto.policy=unlimited"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Java 8 Update 160 or below")," - Download the unlimited strength JCE policy files from Oracle ",Object(i.b)("a",{parentName:"p",href:"http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html"},"here")," and transfer the zip file to the SSHD container. Log in to the container afterwards."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# scp -i hdp-key.pem -P 2022 jce_policy-8.zip <SSHD_CONTAINER>:~")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# ssh -i hdp-key.pem -p 2022 <SSHD_CONTAINER>")),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"or")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"root@<DOCKER_HOST>:~# docker cp jce_policy-8.zip <CONTAINER-ID_of_fusion_sshd-hdp_1>:/root/")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"root@<DOCKER_HOST>:~# docker exec -it fusion_sshd-hdp_1 bash")),Object(i.b)("p",{parentName:"li"},"Extract the policy files and replace the existing policy JAR files in ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/java/jdk1.8.0_XYZ/jre/lib/security")," with the unlimited policy ones."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<SSHD_CONTAINER>> ~]# unzip jce_policy-8.zip")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<SSHD_CONTAINER>> ~]# cp UnlimitedJCEPolicyJDK8/US_export_policy.jar /usr/java/jdk1.8.0_XYZ/jre/lib/security/")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<SSHD_CONTAINER>> ~]# cp UnlimitedJCEPolicyJDK8/local_policy.jar /usr/java/jdk1.8.0_XYZ/jre/lib/security/")),Object(i.b)("p",{parentName:"li"},"Select to overwrite the existing files when prompted."))),Object(i.b)("hr",{parentName:"li"}),Object(i.b)("p",{parentName:"li"},"Any warnings relating to the ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/hadoop")," path should be ignored as the SSHD container will use symlinks to retain Hadoop configuration."),Object(i.b)("p",{parentName:"li"},"Click Next once complete.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"On the ",Object(i.b)("strong",{parentName:"p"},"Assign Slaves and Clients")," step, ensure that the Client option is selected for the Docker host. Click Next once confirmed.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"On the ",Object(i.b)("strong",{parentName:"p"},"Configurations")," step, unless a specific Configuration Group is required, leave the services on Default and click Next.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Click Deploy on the ",Object(i.b)("strong",{parentName:"p"},"Review")," step.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If Kerberos is enabled on the cluster, enter your KDC administrator credentials on the pop-up window and click Save.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Wait until the ",Object(i.b)("strong",{parentName:"p"},"Install, Start and Test")," procedure is complete, then click Next.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"On the Summary page, click Complete."))),Object(i.b)("h3",{id:"configure-the-hdp-cluster"},"Configure the HDP cluster"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Transfer the Kerberos configuration file for the cluster into the SSHD container."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# scp -i hdp-key.pem -P 2022 /etc/krb5.conf <SSHD_CONTAINER>:/etc/shared/krb5.conf"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If required, transfer the keytab to be used with LiveData Plane to the SSHD container."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# scp -i hdp-key.pem -P 2022 /etc/security/keytabs/${FUSION_KEYTAB}.keytab <SSHD_CONTAINER>:/etc/security/keytabs/")),Object(i.b)("p",{parentName:"li"},"This should not be required if using an auto-generated keytab (such as the ",Object(i.b)("inlineCode",{parentName:"p"},"hdfs")," keytab) within the ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/security/keytabs")," directory, as it will have been mapped to the SSHD container automatically.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create two directories within HDFS on the cluster that will be used specifically by LiveData Plane (ensure to ",Object(i.b)("inlineCode",{parentName:"p"},"kinit")," beforehand)."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# hdfs dfs -mkdir -p /wandisco/exchange_dir")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# hdfs dfs -mkdir -p /wandisco/handshake_tokens")),Object(i.b)("p",{parentName:"li"},"Ensure they are owned by the LiveData Plane user, in the example below, the LiveData Plane user will be ",Object(i.b)("inlineCode",{parentName:"p"},"hdfs"),"."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[root@<AMBARI_SERVER> ~]# hdfs dfs -chown hdfs:hdfs -R /wandisco"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add LiveData Plane properties to the HDFS config on the cluster."),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Ambari UI -> HDFS -> Configs -> Advanced -> Custom core-site")),Object(i.b)("p",{parentName:"li"},"Select to add the properties below in ",Object(i.b)("strong",{parentName:"p"},"Bulk property add mode"),"."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-text"},"fusion.client.ssl.enabled=false\nfusion.handshakeToken.dir=/wandisco/handshake_tokens\nfusion.http.authentication.enabled=false\nfusion.http.authorization.enabled=false\nfusion.replicated.dir.exchange=/wandisco/exchange_dir\nfusion.server=fusion-server-hdp:8023\n")),Object(i.b)("p",{parentName:"li"},"Next, add the properties below but adjust the values (encased with ",Object(i.b)("inlineCode",{parentName:"p"},"${}"),") so that they are correct for your environment:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-text"},"fs.fusion.underlyingFs=hdfs://${CLUSTER_NAMESERVICE} or hdfs://${NAMENODE}:${PORT}\nfusion.keytab=/etc/security/keytabs/${FUSION_KEYTAB}.keytab\nfusion.principal=${FUSION_PRINCIPAL}@${REALM}\nhadoop.proxyuser.${FUSION_USER}.hosts=fusion-server-hdp\nhadoop.proxyuser.${FUSION_USER}.groups=*\n")),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-text"},"fs.fusion.underlyingFs=hdfs://nameservice01\nfusion.keytab=/etc/security/keytabs/hdfs.keytab\nfusion.principal=hdfs-hdp-01@$REALM.COM\nhadoop.proxyuser.hdfs.hosts=fusion-server-hdp\nhadoop.proxyuser.hdfs.groups=*\n")),Object(i.b)("p",{parentName:"li"},"If the ",Object(i.b)("inlineCode",{parentName:"p"},"hadoop.proxyuser.${FUSION_USER}.hosts")," property already exists with predefined hostnames, please append ",Object(i.b)("inlineCode",{parentName:"p"},"fusion-server-hdp")," to the value (comma-delimited)."),Object(i.b)("p",{parentName:"li"},Object(i.b)("em",{parentName:"p"},"Example -")," ",Object(i.b)("inlineCode",{parentName:"p"},"hadoop.proxyuser.hdfs.hosts=hdp_namenode01,hdp_namenode02,fusion-server-hdp")),Object(i.b)("p",{parentName:"li"},"If this property value is a wildcard (",Object(i.b)("inlineCode",{parentName:"p"},"*"),"), then it does not need to changed."),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Save")," the HDFS config once all additions have been made.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Restart the cluster services.")))),Object(i.b)("h3",{id:"configure-livedata-plane"},"Configure LiveData Plane"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Log in to the Docker host via terminal, edit the ",Object(i.b)("inlineCode",{parentName:"p"},"ui.properties")," file on the LiveData Plane UI container in the HDP zone."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"root@<DOCKER_HOST>:~# docker exec -it fusion_fusion-ui-server-hdp_1 bash")),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"[hdfs@<FUSION_UI_HDP> /]$ vi /opt/wandisco/fusion-ui-server/properties/ui.properties")),Object(i.b)("p",{parentName:"li"},"Add the following properties below, but adjust the values (prefixed with ",Object(i.b)("inlineCode",{parentName:"p"},"$"),") so that they are correct for your environment:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-json"},"cluster.kerberos.configured=true\nkerberos.enabled=true\nkerberos.config.path=/etc/krb5.conf\nkerberos.principal=${FUSION_PRINCIPAL}@${REALM}\nkerberos.keytab.path=/etc/security/keytabs/${FUSION_KEYTAB}.keytab\nkerberos.generated.config.path=/opt/wandisco/fusion-ui-server/lib/kerberos.conf\n")),Object(i.b)("p",{parentName:"li"},"Once complete, save and quit the file. Exit the container once complete."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"exit")))),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Adjust the ownership of required files inside of one of the LiveData Plane containers in the HDP zone."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"root@<DOCKER_HOST>:~# docker exec -u root -it fusion_fusion-server-hdp_1 bash -c 'chown hdfs:hdfs /etc/security/keytabs/hdfs.headless.keytab /etc/hadoop/conf/core-site.xml /etc/hadoop/conf/hdfs-site.xml'"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Restart the LiveData Plane containers in the HDP zone (except SSHD) so that the configuration is picked up by LiveData Plane. You must be inside the ",Object(i.b)("inlineCode",{parentName:"p"},"fusion-docker-compose")," directory to run this command."),Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"root@<DOCKER_HOST>:~/fusion-docker-compose# docker-compose restart fusion-ihc-server-hdp fusion-server-hdp fusion-ui-server-hdp fusion-nn-proxy-hdp")))),Object(i.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(i.b)("h3",{id:"starting-the-ambari-agent"},"Starting the Ambari Agent"),Object(i.b)("p",null,"When restarting the SSHD container (or all containers), the ",Object(i.b)("inlineCode",{parentName:"p"},"ambari-agent")," service will not be started automatically."),Object(i.b)("p",null,"To start it, log in to the Docker host and run the command below:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"docker exec -it fusion_sshd-hdp_1 bash -c 'ambari-agent start'")))}l.isMDXComponent=!0},173:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=l(a),m=n,h=s["".concat(o,".").concat(m)]||s[m]||d[m]||i;return a?r.a.createElement(h,p(p({ref:t},b),{},{components:a})):r.a.createElement(h,p({ref:t},b))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var b=2;b<i;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);